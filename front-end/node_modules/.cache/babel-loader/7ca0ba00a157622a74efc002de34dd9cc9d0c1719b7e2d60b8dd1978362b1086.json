{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-left\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-left\"\n}, \" Calories \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_table = _resolveComponent(\"v-table\");\n  return _openBlock(), _createBlock(_component_v_table, null, {\n    default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.headers, item => {\n      return _openBlock(), _createElementBlock(\"th\", _hoisted_1, \" Name \");\n    }), 256 /* UNKEYED_FRAGMENT */)), _hoisted_2])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.desserts, item => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: item.name\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.calories), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createElementVNode","_createBlock","_component_v_table","_createElementBlock","_Fragment","_renderList","$props","headers","item","_hoisted_1","_hoisted_2","_ctx","desserts","key","name","_toDisplayString","calories"],"sources":["/Users/mauroroger/Desktop/diretorio-digital/front-end-diretorio-digital/front-end/src/components/Table.vue"],"sourcesContent":["<template>\n    <v-table>\n        <thead>\n        <tr>\n            <th  v-for=\"item in headers\" class=\"text-left\">\n            Name\n            </th>\n            <th class=\"text-left\">\n            Calories\n            </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr\n            v-for=\"item in desserts\"\n            :key=\"item.name\"\n        >\n            <td>{{ item.name }}</td>\n            <td>{{ item.calories }}</td>\n        </tr>\n        </tbody>\n    </v-table>\n</template>\n<script>\nexport default {\n    props: ['headers',],\n    data: () => ({\n        itemsPerPage: 5,\n        headers: [\n            {\n            title: 'Dessert (100g serving)',\n            align: 'start',\n            sortable: false,\n            key: 'name',\n            },\n            { title: 'Calories', key: 'calories', align: 'end' },\n            { title: 'Fat (g)', key: 'fat', align: 'end' },\n            { title: 'Carbs (g)', key: 'carbs', align: 'end' },\n            { title: 'Protein (g)', key: 'protein', align: 'end' },\n            { title: 'Iron (%)', key: 'iron', align: 'end' },\n        ],\n        search: '',\n        serverItems: [],\n        loading: true,\n        totalItems: 0,\n    }),\n\n    methods: {\n    loadItems ({ page, itemsPerPage, sortBy }) {\n        this.loading = true\n        FakeAPI.fetch({ page, itemsPerPage, sortBy }).then(({ items, total }) => {\n        this.serverItems = items\n        this.totalItems = total\n        this.loading = false\n        })\n    },\n    },\n}\n</script>"],"mappings":";;EAIyCA,KAAK,EAAC;AAAW;gCAG9CC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAW,GAAC,YAEtB;;;;uBARRE,YAAA,CAoBUC,kBAAA;sBAnBN,MASQ,CATRF,mBAAA,CASQ,gBARRA,mBAAA,CAOK,c,kBANDG,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAFeC,MAAA,CAAAC,OAAO,EAAfC,IAAI;2BAAhBL,mBAAA,CAEK,MAFLM,UAEK,EAF0C,QAE/C;sCACAC,UAEK,C,KAGTV,mBAAA,CAQQ,iB,kBAPRG,mBAAA,CAMKC,SAAA,QAAAC,WAAA,CALcM,IAAA,CAAAC,QAAQ,EAAhBJ,IAAI;2BADfL,mBAAA,CAMK;QAJAU,GAAG,EAAEL,IAAI,CAACM;UAEXd,mBAAA,CAAwB,YAAAe,gBAAA,CAAjBP,IAAI,CAACM,IAAI,kBAChBd,mBAAA,CAA4B,YAAAe,gBAAA,CAArBP,IAAI,CAACQ,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}