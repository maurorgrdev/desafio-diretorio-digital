{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    style: {\n      \"max-width\": \"70%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"FornecedorForm\"], {\n      title: $setup.title,\n      subtitle: $setup.subtitle,\n      \"dados-fornecedor\": $setup.dadosFornecedor,\n      tipo: \"criacao\",\n      onOnClickConfirm: $setup.confirmForm\n    }, null, 8 /* PROPS */, [\"dados-fornecedor\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","style","_createVNode","$setup","title","subtitle","dadosFornecedor","tipo","onOnClickConfirm","confirmForm"],"sources":["/Users/mauroroger/Desktop/diretorio-digital/front-end-diretorio-digital/front-end/src/views/Fornecedor/FornecedorCreateView.vue"],"sourcesContent":["<template>\n    <v-container style=\"max-width: 70%;\">\n        <FornecedorForm \n            :title=\"title\" \n            :subtitle=\"subtitle\"\n            :dados-fornecedor=\"dadosFornecedor\"\n            tipo=\"criacao\"\n            v-on:on-click-confirm=\"confirmForm\"\n        ></FornecedorForm>\n    </v-container>\n</template>\n\n<script setup>\nimport FornecedorForm from '@/components/Fornecedor/FornecedorForm.vue';\nimport { useFornecedorStore } from '@/store/fornecedores';\nimport { reactive } from 'vue'\nimport api from 'axios'\nimport { ref, onMounted, computed } from \"vue\";\nimport { useRouter } from 'vue-router';\n\nconst router = useRouter()\n\nconst store = useFornecedorStore();\n\nconst title = 'Cadastro de Fornecedor'\nconst subtitle = 'Cadastrando um novo fornecedor'\n\nlet dadosFornecedor = {}\n\nasync function confirmForm(fornecedorCreate, arquivoFornecedor){\n    await store.addFornecedor(fornecedorCreate);\n\n    await uploadArquivoFornecedor(arquivoFornecedor, fornecedorCreate);\n\n    router.push({ path: '/fornecedores' });\n}\n\nasync function uploadArquivoFornecedor(arquivoFornecedor, fornecedorCreate){\n  let form = new FormData()\n  form.append('file', arquivoFornecedor)\n  form.append('name', arquivoFornecedor.name)\n  form.append('fornecedor_email', fornecedorCreate.email)\n\n  const haha = await api.post(\"/upload-fornecedor\", form, {\n    baseURL: 'http://localhost:8000/api/',\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n}\n</script>"],"mappings":";;;uBACIA,YAAA,CAQcC,sBAAA;IARDC,KAAuB,EAAvB;MAAA;IAAA;EAAuB;sBAChC,MAMkB,CANlBC,YAAA,CAMkBC,MAAA;MALbC,KAAK,EAAED,MAAA,CAAAC,KAAK;MACZC,QAAQ,EAAEF,MAAA,CAAAE,QAAQ;MAClB,kBAAgB,EAAEF,MAAA,CAAAG,eAAe;MAClCC,IAAI,EAAC,SAAS;MACTC,gBAAgB,EAAEL,MAAA,CAAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}