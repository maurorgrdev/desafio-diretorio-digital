{"ast":null,"code":"import { setBlockTracking as _setBlockTracking, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_table = _resolveComponent(\"v-table\");\n  return _openBlock(), _createBlock(_component_v_table, null, {\n    default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_cache[0] || (_setBlockTracking(-1), _cache[0] = (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.headers, item => {\n      return _openBlock(), _createElementBlock(\"th\", _hoisted_1, [_createTextVNode(\"item\")]);\n    }), 256 /* UNKEYED_FRAGMENT */)), _setBlockTracking(1), _cache[0])])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.dados, item => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: item[0]\n      }, [_cache[1] || (_setBlockTracking(-1), _cache[1] = (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.dados, item => {\n        return _openBlock(), _createElementBlock(\"td\", null, [_createTextVNode(_toDisplayString(item), 1 /* TEXT */)]);\n      }), 256 /* UNKEYED_FRAGMENT */)), _setBlockTracking(1), _cache[1])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_v_table","_createElementVNode","_createElementBlock","_Fragment","_renderList","$props","headers","item","_hoisted_1","dados","key"],"sources":["/Users/mauroroger/Desktop/diretorio-digital/front-end-diretorio-digital/front-end/src/components/Table.vue"],"sourcesContent":["<template>\n    <v-table>\n        <thead>\n        <tr>\n            <th  v-for=\"item in headers\" v-once class=\"text-left\">item</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr\n            v-for=\"item in dados\"\n            :key=\"item[0]\"\n        >\n            <td v-for=\"item in dados\" v-once>{{ item }}</td>\n        </tr>\n        </tbody>\n    </v-table>\n</template>\n<script>\nexport default {\n    props: ['headers', 'dados'],\n\n    data: () => ({\n        itemsPerPage: 5,\n        headers: [\n            {\n            title: 'Dessert (100g serving)',\n            align: 'start',\n            sortable: false,\n            key: 'name',\n            },\n            { title: 'Calories', key: 'calories', align: 'end' },\n            { title: 'Fat (g)', key: 'fat', align: 'end' },\n            { title: 'Carbs (g)', key: 'carbs', align: 'end' },\n            { title: 'Protein (g)', key: 'protein', align: 'end' },\n            { title: 'Iron (%)', key: 'iron', align: 'end' },\n        ],\n        search: '',\n        serverItems: [],\n        loading: true,\n        totalItems: 0,\n    }),\n\n    mounted() {\n        let convertida = original.map(function(obj) {\n            return Object.keys(obj).map(function(chave) {\n                return obj[chave];\n            });\n        });\n    },\n\n    methods: {\n    loadItems ({ page, itemsPerPage, sortBy }) {\n        this.loading = true\n        FakeAPI.fetch({ page, itemsPerPage, sortBy }).then(({ items, total }) => {\n        this.serverItems = items\n        this.totalItems = total\n        this.loading = false\n        })\n    },\n    },\n}\n</script>"],"mappings":";;EAIgDA,KAAK,EAAC;AAAW;;;uBAH7DC,YAAA,CAcUC,kBAAA;sBAbN,MAIQ,CAJRC,mBAAA,CAIQ,gBAHRA,mBAAA,CAEK,a,oEADDC,mBAAA,CAA+DC,SAAA,QAAAC,WAAA,CAA3CC,MAAA,CAAAC,OAAO,EAAfC,IAAI;2BAAhBL,mBAAA,CAA+D,MAA/DM,UAA+D,G,iBAAT,MAAI,E;4EAG9DP,mBAAA,CAOQ,iB,kBANRC,mBAAA,CAKKC,SAAA,QAAAC,WAAA,CAJcC,MAAA,CAAAI,KAAK,EAAbF,IAAI;2BADfL,mBAAA,CAKK;QAHAQ,GAAG,EAAEH,IAAI;8EAEVL,mBAAA,CAAgDC,SAAA,QAAAC,WAAA,CAA7BC,MAAA,CAAAI,KAAK,EAAbF,IAAI;6BAAfL,mBAAA,CAAgD,a,kCAAZK,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}