{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    style: {\n      \"max-width\": \"70%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"FornecedorForm\"], {\n      title: $setup.title,\n      subtitle: $setup.subtitle,\n      \"dados-fornecedor\": $setup.novoFornecedor,\n      tipo: \"edicao\",\n      onOnClickConfirm: $setup.callBackConfirmForm,\n      onOnClickDownloadFile: $setup.callBackDownload,\n      onOnClickDeleteFile: $setup.callBackDeleteFile\n    }, null, 8 /* PROPS */, [\"dados-fornecedor\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","style","_createVNode","$setup","title","subtitle","novoFornecedor","tipo","onOnClickConfirm","callBackConfirmForm","onOnClickDownloadFile","callBackDownload","onOnClickDeleteFile","callBackDeleteFile"],"sources":["/Users/mauroroger/Desktop/diretorio-digital/front-end-diretorio-digital/front-end/src/views/Fornecedor/FornecedorUpdateView.vue"],"sourcesContent":["<template>\n    <v-container style=\"max-width: 70%;\">\n        <FornecedorForm \n            :title=\"title\" \n            :subtitle=\"subtitle\"\n            :dados-fornecedor=\"novoFornecedor\"\n            tipo=\"edicao\"\n            v-on:on-click-confirm=\"callBackConfirmForm\"\n            v-on:on-click-download-file=\"callBackDownload\"\n            v-on:on-click-delete-file=\"callBackDeleteFile\"\n        ></FornecedorForm>\n    </v-container>\n</template>\n\n<script setup>\n    import { useFornecedorStore } from '@/store/fornecedores';\n    import FornecedorForm from '@/components/Fornecedor/FornecedorForm.vue';\n    import { onMounted, computed, toRefs } from 'vue';\n    import api from '@/axios';\n    import { useRouter } from 'vue-router';\n\n    const router = useRouter()\n\n\n    const props = defineProps({\n        id: String ,\n    })\n\n    const store = useFornecedorStore()\n\n    const title = 'Edição de Fornecedor'\n    const subtitle = 'Editando um fornecedor'\n\n    const { id } = toRefs(props);\n\n    onMounted(async () => {\n        await store.loadFornecedor(id.value);\n    })\n\n    const novoFornecedor = computed(() => {\n        return store.getFornecedor\n    })\n\n    const emit = defineEmits(['change', 'delete'])    \n\n    async function callBackConfirmForm(fornecedorAtualizado, arquivoFornecedor){\n        await store.editFornecedor(fornecedorAtualizado);\n\n        await uploadArquivoFornecedor(arquivoFornecedor, fornecedorAtualizado);\n\n        router.push({ path: '/fornecedores' });\n    }\n\n    async function uploadArquivoFornecedor(arquivoFornecedor, fornecedorCreate){\n        let form = new FormData()\n        console.log(arquivoFornecedor);\n        form.append('file', arquivoFornecedor)\n        form.append('name', arquivoFornecedor.name)\n        form.append('fornecedor_email', fornecedorCreate.email)\n\n        const haha = await api.post(\"/upload-fornecedor\", form, {\n            baseURL: 'http://localhost:8000/api/',\n            headers: {\n            \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n    }\n\n    async function callBackDownload(fornecedor_id, file_name){\n        await api.get(`/download-fornecedor/${fornecedor_id}`, {\n            baseURL: 'http://localhost:8000/api/',\n            responseType: 'blob',\n        }).then((response) => {\n            const fileUrl = window.URL.createObjectURL(new Blob([response.data]))\n            \n            let fileLink = document.createElement('a')\n            fileLink.href = fileUrl\n            fileLink.setAttribute('download', file_name)\n            document.body.appendChild(fileLink)\n            fileLink.click();\n        });\n    }\n\n    async function callBackDeleteFile(fornecedor_id){\n        await api.delete(`/delete-fornecedor/${fornecedor_id}`, {\n            baseURL: 'http://localhost:8000/api/',\n            responseType: 'json',\n        });\n\n        await store.loadFornecedor(id.value);\n    }\n</script>"],"mappings":";;;uBACIA,YAAA,CAUcC,sBAAA;IAVDC,KAAuB,EAAvB;MAAA;IAAA;EAAuB;sBAChC,MAQkB,CARlBC,YAAA,CAQkBC,MAAA;MAPbC,KAAK,EAAED,MAAA,CAAAC,KAAK;MACZC,QAAQ,EAAEF,MAAA,CAAAE,QAAQ;MAClB,kBAAgB,EAAEF,MAAA,CAAAG,cAAc;MACjCC,IAAI,EAAC,QAAQ;MACRC,gBAAgB,EAAEL,MAAA,CAAAM,mBAAmB;MACrCC,qBAAsB,EAAEP,MAAA,CAAAQ,gBAAgB;MACxCC,mBAAoB,EAAET,MAAA,CAAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}