{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_sheet, {\n      \"max-width\": \"300\",\n      class: \"mx-auto\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_form, {\n        \"validate-on\": \"submit lazy\",\n        onSubmit: _withModifiers($options.submit, [\"prevent\"])\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            modelValue: _ctx.login,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.login = $event),\n            label: \"CPF ou Email\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            modelValue: _ctx.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n            label: \"Password\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_btn, {\n          loading: _ctx.loading,\n          type: \"submit\",\n          block: \"\",\n          class: \"mt-2\",\n          text: \"Login\"\n        }, null, 8 /* PROPS */, [\"loading\"])]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onSubmit\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_createVNode","_component_v_sheet","class","_component_v_form","onSubmit","_withModifiers","$options","submit","_component_v_row","_component_v_text_field","_ctx","login","$event","label","password","_component_v_btn","loading","type","block","text"],"sources":["/Users/mauroroger/Desktop/diretorio-digital/front-end-diretorio-digital/front-end/src/views/Usuario/Login.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-sheet max-width=\"300\" class=\"mx-auto\">\n            <v-form validate-on=\"submit lazy\" @submit.prevent=\"submit\">\n                <v-row>\n                    <v-text-field\n                    v-model=\"login\"\n                    label=\"CPF ou Email\"\n                    ></v-text-field>\n                </v-row>\n                <v-row>\n                    <v-text-field\n                    v-model=\"password\"\n                    label=\"Password\"\n                    ></v-text-field>\n                </v-row>\n                <v-btn\n                :loading=\"loading\"\n                type=\"submit\"\n                block\n                class=\"mt-2\"\n                text=\"Login\"\n                ></v-btn>\n            </v-form>\n        </v-sheet>\n    </v-container>\n</template>\n\n<script>\n    import { useUsuarioStore } from '../../store/user.js'\n  export default {\n    data: vm => ({\n      loading: false,\n      timeout: null,\n      login: '',\n      password: '',\n    }),\n\n    setup() {\n        const usuarioStore = useUsuarioStore()\n\n        return { usuarioStore }\n    },\n\n    methods: {\n      async submit (event) {\n        this.loading = true\n\n        const results = {\n                email: this.login,\n                password: this.password\n        }\n\n        this.loading = false\n\n        const response = this.usuarioStore.login(results);\n        console.log(response);\n      },\n      async checkApi (userName) {\n        return new Promise(resolve => {\n          clearTimeout(this.timeout)\n\n          this.timeout = setTimeout(() => {\n            if (!userName) return resolve('Please enter a user name.')\n            if (userName === 'johnleider') return resolve('User name already taken. Please try another one.')\n\n            return resolve(true)\n          }, 1000)\n        })\n      },\n    },\n  }\n</script>\n\n<!-- <script setup>\n\nimport { reactive } from 'vue'\nimport { useUsuarioStore } from \"../../store/user\"\n\nconst store = useUsuarioStore()\n\nlet login = ''\nlet password = ''\n\nconst nameRules = [\n    value => {\n        if (value) return true\n\n        return 'Name is required.'\n    },\n    value => {\n        if (value?.length <= 10) return true\n\n        return 'Name must be less than 10 characters.'\n    },\n]\nlet email = ''\nconst emailRules = [\n    value => {\n        if (value) return true\n\n        return 'E-mail is requred.'\n    },\n    value => {\n        if (/.+@.+\\..+/.test(value)) return true\n\n        return 'E-mail must be valid.'\n    },\n]\n\n\nfunction userLogin() {\n    const dados = reactive({\n        login: login,\n        password: password,\n    })  \n    \n    store.login(dados);\n}\n</script> -->"],"mappings":";;;;;;;;uBACIA,YAAA,CAwBcC,sBAAA;sBAvBV,MAsBU,CAtBVC,YAAA,CAsBUC,kBAAA;MAtBD,WAAS,EAAC,KAAK;MAACC,KAAK,EAAC;;wBAC3B,MAoBS,CApBTF,YAAA,CAoBSG,iBAAA;QApBD,aAAW,EAAC,aAAa;QAAEC,QAAM,EAAAC,cAAA,CAAUC,QAAA,CAAAC,MAAM;;0BACrD,MAKQ,CALRP,YAAA,CAKQQ,gBAAA;4BAJJ,MAGgB,CAHhBR,YAAA,CAGgBS,uBAAA;wBAFPC,IAAA,CAAAC,KAAK;uEAALD,IAAA,CAAAC,KAAK,GAAAC,MAAA;YACdC,KAAK,EAAC;;;YAGVb,YAAA,CAKQQ,gBAAA;4BAJJ,MAGgB,CAHhBR,YAAA,CAGgBS,uBAAA;wBAFPC,IAAA,CAAAI,QAAQ;uEAARJ,IAAA,CAAAI,QAAQ,GAAAF,MAAA;YACjBC,KAAK,EAAC;;;YAGVb,YAAA,CAMSe,gBAAA;UALRC,OAAO,EAAEN,IAAA,CAAAM,OAAO;UACjBC,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAL,EAAK;UACLhB,KAAK,EAAC,MAAM;UACZiB,IAAI,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}